// <auto-generated />
using System;
using BlazorShop.Api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BlazorShop.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250601191545_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BlazorShop.Api.Entities.Carrinho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Carrinhos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UsuarioId = "1"
                        },
                        new
                        {
                            Id = 2,
                            UsuarioId = "2"
                        });
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.CarrinhoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrinhoId")
                        .HasColumnType("integer");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("CarrinhoItens");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("IconCSS")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IconCSS = "",
                            Nome = "Equipamentos"
                        },
                        new
                        {
                            Id = 2,
                            IconCSS = "",
                            Nome = "Eletrônicos Esportivos"
                        },
                        new
                        {
                            Id = 3,
                            IconCSS = "",
                            Nome = "Roupas"
                        },
                        new
                        {
                            Id = 4,
                            IconCSS = "",
                            Nome = "Calçados"
                        });
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            Descricao = "Bola oficial para jogos, costurada à máquina e resistente à água",
                            ImagemUrl = "/Imagens/Esportes/bola1.jpg",
                            Nome = "Bola de Futebol Adidas",
                            Preco = 120m,
                            Quantidade = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 1,
                            Descricao = "Bola de basquete para quadra indoor/outdoor",
                            ImagemUrl = "/Imagens/Esportes/bola2.jpg",
                            Nome = "Bola de Basquete Wilson",
                            Preco = 95m,
                            Quantidade = 60
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 1,
                            Descricao = "Raquete profissional leve e resistente para jogadores intermediários",
                            ImagemUrl = "/Imagens/Esportes/raquete.jpg",
                            Nome = "Raquete de Tênis Babolat",
                            Preco = 350m,
                            Quantidade = 20
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 1,
                            Descricao = "Rede oficial com medidas para torneios profissionais",
                            ImagemUrl = "/Imagens/Esportes/rede_volei.jpg",
                            Nome = "Rede de Vôlei Profissional",
                            Preco = 200m,
                            Quantidade = 15
                        },
                        new
                        {
                            Id = 5,
                            CategoriaId = 1,
                            Descricao = "Capacete ajustável com ventilação para maior segurança",
                            ImagemUrl = "/Imagens/Esportes/capacete.jpg",
                            Nome = "Capacete para Ciclismo",
                            Preco = 180m,
                            Quantidade = 30
                        },
                        new
                        {
                            Id = 6,
                            CategoriaId = 2,
                            Descricao = "Relógio esportivo com GPS e monitoramento cardíaco",
                            ImagemUrl = "/Imagens/Esportes/garmin.jpg",
                            Nome = "Smartwatch Garmin",
                            Preco = 1100m,
                            Quantidade = 25
                        },
                        new
                        {
                            Id = 7,
                            CategoriaId = 2,
                            Descricao = "Fones bluetooth resistentes à água com ótima fixação",
                            ImagemUrl = "/Imagens/Esportes/fone.jpg",
                            Nome = "Fone Esportivo JBL",
                            Preco = 320m,
                            Quantidade = 80
                        },
                        new
                        {
                            Id = 8,
                            CategoriaId = 2,
                            Descricao = "Multiesportivo com sensores precisos de desempenho",
                            ImagemUrl = "/Imagens/Esportes/polar.jpg",
                            Nome = "Relógio Polar Vantage M",
                            Preco = 900m,
                            Quantidade = 40
                        },
                        new
                        {
                            Id = 9,
                            CategoriaId = 3,
                            Descricao = "Camiseta leve com tecnologia de secagem rápida",
                            ImagemUrl = "/Imagens/Esportes/camiseta.jpg",
                            Nome = "Camiseta Dry Fit Nike",
                            Preco = 120m,
                            Quantidade = 100
                        },
                        new
                        {
                            Id = 10,
                            CategoriaId = 3,
                            Descricao = "Legging feminina ideal para treinos e corridas",
                            ImagemUrl = "/Imagens/Esportes/legging.jpg",
                            Nome = "Calça Legging Adidas",
                            Preco = 150m,
                            Quantidade = 70
                        },
                        new
                        {
                            Id = 11,
                            CategoriaId = 3,
                            Descricao = "Shorts com tecido respirável e elástico",
                            ImagemUrl = "/Imagens/Esportes/shorts.jpg",
                            Nome = "Shorts Esportivo Under Armour",
                            Preco = 90m,
                            Quantidade = 80
                        },
                        new
                        {
                            Id = 12,
                            CategoriaId = 4,
                            Descricao = "Tênis leve e confortável com amortecimento em gel",
                            ImagemUrl = "/Imagens/Esportes/tenis_asics.jpg",
                            Nome = "Tênis de Corrida Asics",
                            Preco = 350m,
                            Quantidade = 40
                        },
                        new
                        {
                            Id = 13,
                            CategoriaId = 4,
                            Descricao = "Chuteira profissional para campo",
                            ImagemUrl = "/Imagens/Esportes/chuteira.jpg",
                            Nome = "Chuteira Nike Mercurial",
                            Preco = 450m,
                            Quantidade = 30
                        });
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarrinhoId")
                        .HasColumnType("integer");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NomeUsuario = "Bonafe"
                        },
                        new
                        {
                            Id = 2,
                            NomeUsuario = "Lucas"
                        });
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.CarrinhoItem", b =>
                {
                    b.HasOne("BlazorShop.Api.Entities.Carrinho", "Carrinho")
                        .WithMany("Itens")
                        .HasForeignKey("CarrinhoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlazorShop.Api.Entities.Produto", "Produto")
                        .WithMany("Itens")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Produto", b =>
                {
                    b.HasOne("BlazorShop.Api.Entities.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Usuario", b =>
                {
                    b.HasOne("BlazorShop.Api.Entities.Carrinho", "Carrinho")
                        .WithMany()
                        .HasForeignKey("CarrinhoId");

                    b.Navigation("Carrinho");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Carrinho", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("BlazorShop.Api.Entities.Produto", b =>
                {
                    b.Navigation("Itens");
                });
#pragma warning restore 612, 618
        }
    }
}
