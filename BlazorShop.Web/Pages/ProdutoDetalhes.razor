@page "/ProdutoDetalhes/{Id:int}"


<div class="produto-detalhes-container">
    @if (Produto is null && MensagemErro is null)
    {
        <div class="loading-area">
            <ExibirSpinner />
        </div>
    }
    else if (MensagemErro is not null)
    {
        <div class="error-area">
            <ExibirErro MensagemErro="@MensagemErro"></ExibirErro>
        </div>
    }
    else
    {
        <div class="produto-detalhes">
            <div class="produto-info">
                <div class="produto-imagem">
                    <img src="@Produto!.ImagemUrl" alt="@Produto.Nome" />
                    <div class ="produto-titulo-preco">
                        <h2 class="produto-nome">@Produto.Nome</h2>
                        <p class="produto-descricao">@Produto.Descricao</p>
                        <div class="produto-preco">
                            @Produto.Preco.ToString("C")
                        </div>

                        <p class="produto-estoque">
                            @Produto.Quantidade em estoque
                        </p>
                        <button class="produto-btn"
                                @onclick="() => AdicionarAoCarrinho_Click(new CarrinhoItemAdicionaDto{
                                CarrinhoId = UsuarioLogado.CarrinhoId,
                                                        ProdutoId = Produto.Id,
                                                        Quantidade = 1
                                                    })">
                                Adicionar no Carrinho
                        </button>
                    </div>
                </div>


            </div>
        </div>
    }
</div>

@code {
    [Inject]
    public IProdutoService? ProdutoService { get; set; }
    [Inject]
    public ICarrinhoCompraService? CarrinhoCompraService { get; set; }

    [Inject]
    public NavigationManager? NavigationManager { get; set; }

    [Inject]
    public IGerenciaProdutosLocalStorageService?
                GerenciaProdutosLocalStorageService { get; set; }

    [Inject]
    public IGerenciaCarrinhoItensLocalStorageService?
                  GerenciaCarrinhoItensLocalStorageService { get; set; }

    private List<CarrinhoItemDto>? CarrinhoCompraItens { get; set; }

    [Parameter]
    public int Id { get; set; }

    public ProdutoDto? Produto { get; set; }

    public string? MensagemErro { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            CarrinhoCompraItens = await GerenciaCarrinhoItensLocalStorageService.GetCollection();
            //Produto = await ProdutoService.GetItem(Id);
            Produto = await GetProdutoPorId(Id);
        }
        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }

    protected async Task AdicionarAoCarrinho_Click(CarrinhoItemAdicionaDto carrinhoItemAdicionaDto)
    {
        try
        {
            var carrinhoItemDto = await CarrinhoCompraService.AdicionaItem(carrinhoItemAdicionaDto);
            
            if (carrinhoItemDto != null)
            {
                CarrinhoCompraItens.Add(carrinhoItemDto);
                await GerenciaCarrinhoItensLocalStorageService.SaveCollection(CarrinhoCompraItens);
            }
            
            NavigationManager.NavigateTo("/CarrinhoCompra");
        }
        catch (Exception)
        {
            throw;
        }
    }

    private async Task<ProdutoDto> GetProdutoPorId(int id)
    {
        var produtosDto = await GerenciaProdutosLocalStorageService.GetCollection();

        if (produtosDto != null)
        {
            return produtosDto.SingleOrDefault(p => p.Id == id);
        }
        return null;
    }
}
