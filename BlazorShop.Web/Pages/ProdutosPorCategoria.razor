@page "/ProdutosPorCategoria/{CategoriaId:int}"

<div class="container my-5">
    @if (ProdutosDto == null && MensagemErro == null)
    {
        <div class="d-flex justify-content-center align-items-center" style="height:60vh;">
            <ExibirSpinner />
        </div>
    }
    else if (MensagemErro != null)
    {
        <div class="alert alert-danger text-center shadow-sm rounded-3">
            <ExibirErro ErrorMessage="@MensagemErro" />
        </div>
    }
    else
    {
        <div class="text-start mb-4">
            <h2 class="fw-bold text-black">@NomeCategoria</h2>
            <p class="text-muted">Confira os produtos disponíveis nesta categoria</p>
        </div>

        @if (ProdutosDto!.Any())
        {
            <div class="row g-4">
                <ExibirProdutos Produtos="@ProdutosDto"></ExibirProdutos>
            </div>
        }
        else
        {
            <div class="text-center mt-5">
                <i class="bi bi-box-seam text-secondary" style="font-size:3rem;"></i>
                <p class="mt-3 text-muted">Nenhum produto encontrado nesta categoria.</p>
            </div>
        }
    }
</div>

@code {
    [Parameter]
    public int CategoriaId { get; set; }

    [Inject]
    public IProdutoService ProdutoService { get; set; } = null!;

    public IEnumerable<ProdutoDto>? ProdutosDto { get; set; }

    [Inject]
    public IGerenciaProdutosLocalStorageService GerenciaProdutosLocalStorageService { get; set; } = null!;

    public string? NomeCategoria { get; set; }
    public string? MensagemErro { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            ProdutosDto = await GetColecaoProdutosPorCategoriaId(CategoriaId);

            if (ProdutosDto?.Any() == true)
            {
                NomeCategoria = ProdutosDto.First().CategoriaNome;
            }
        }
        catch (Exception ex)
        {
            MensagemErro = ex.Message;
        }
    }

    private async Task<IEnumerable<ProdutoDto>> GetColecaoProdutosPorCategoriaId(int categoriaId)
    {
        var produtoCollection = await GerenciaProdutosLocalStorageService.GetCollection();

        if (produtoCollection != null)
            return produtoCollection.Where(p => p.CategoriaId == categoriaId);

        return await ProdutoService.GetItensPorCategoria(categoriaId);
    }
}
